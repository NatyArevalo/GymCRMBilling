 public TrainerBilling createBilling(TrainerTrainingInformationDTO trainerTrainingInformationDTO){
        //DTO creation
        TrainerBillingDTO trainerBillingDTO = trainerBillingInformationMapper.mapToDTO(trainerTrainingInformationDTO);
        TrainerBillingYearDTO trainerBillingYearDTO = trainerBillingYearMapper.mapToDTO(trainerTrainingInformationDTO);
        TrainerBillingMonthDTO trainerBillingMonthDTO = trainerBillingMonthMapper.mapToDTO(trainerTrainingInformationDTO);

        //Entity creation
        TrainerBilling trainerBilling = new TrainerBilling();
        TrainerBillingYear trainerBillingYear = new TrainerBillingYear();
        TrainerBillingMonth trainerBillingMonth = new TrainerBillingMonth();


        trainerBilling = getTrainerBillingByUsername(trainerTrainingInformationDTO.getTrainerUsername());

        if (trainerBilling == null) {
            trainerBilling = trainerBillingMapper.mapToEntity(trainerBillingDTO, null); // NO year yet

            // Then create the year, and set its parent
            trainerBillingYear = trainerBillingYearMapper.mapToEntity(trainerBillingYearDTO, trainerBilling);
            trainerBillingYear.setTrainerBilling(trainerBilling); // Link parent

            // Then create the month, and set its parent
            trainerBillingMonth = trainerBillingMonthMapper.mapToEntity(trainerBillingMonthDTO, trainerBillingYear);
            trainerBillingMonth.setTrainerBillingYear(trainerBillingYear); // Link parent

            // Link child to parent
            trainerBillingYear.getMonths().add(trainerBillingMonth);
            trainerBilling.getYears().add(trainerBillingYear);
        } else {
            trainerBillingYear = trainerBillingYearRepository.findByYearAndTrainerBilling(trainerBillingYearDTO.getYear(), trainerBilling);
            if (trainerBillingYear == null) {
                trainerBillingYear = trainerBillingYearMapper.mapToEntity(trainerBillingYearDTO, trainerBilling);
                trainerBilling.getYears().add(trainerBillingYear);
            } else {
                trainerBillingMonth = trainerBillingMonthRepository.findByMonthAndTrainerBillingYear(trainerBillingMonthDTO.getMonth(), trainerBillingYear);
                if (trainerBillingMonth == null) {
                    trainerBillingMonth = trainerBillingMonthMapper.mapToEntity(trainerBillingMonthDTO, trainerBillingYear);
                    trainerBillingYear.getMonths().add(trainerBillingMonth);
                } else {
                    trainerBillingYear.getMonths().get(trainerBillingYear.getMonths().indexOf(trainerBillingMonth)).setTrainingDuration(trainerBillingYear.getMonths().get(trainerBillingYear.getMonths().indexOf(trainerBillingMonth)).getTrainingDuration()+trainerBillingMonthDTO.getTrainingDuration());
                }
            }
        }

        return trainerBillingRepository.save(trainerBilling);
    }